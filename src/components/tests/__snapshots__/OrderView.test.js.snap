// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderView tests Snapshot matches 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrderView
    book={
      Object {
        "name": "Book title",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span>
          <b>
            Book title
          </b>
        </span>,
        <button
          className="btn btn-secondary"
          onClick={[Function]}
          style={
            Object {
              "float": "right",
            }
          }
        >
          Remove
        </button>,
      ],
      "style": Object {
        "padding": "15px",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <b>
            Book title
          </b>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Book title",
          },
          "ref": null,
          "rendered": "Book title",
          "type": "b",
        },
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Remove",
          "className": "btn btn-secondary",
          "onClick": [Function],
          "style": Object {
            "float": "right",
          },
        },
        "ref": null,
        "rendered": "Remove",
        "type": "button",
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span>
            <b>
              Book title
            </b>
          </span>,
          <button
            className="btn btn-secondary"
            onClick={[Function]}
            style={
              Object {
                "float": "right",
              }
            }
          >
            Remove
          </button>,
        ],
        "style": Object {
          "padding": "15px",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <b>
              Book title
            </b>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Book title",
            },
            "ref": null,
            "rendered": "Book title",
            "type": "b",
          },
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Remove",
            "className": "btn btn-secondary",
            "onClick": [Function],
            "style": Object {
              "float": "right",
            },
          },
          "ref": null,
          "rendered": "Remove",
          "type": "button",
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
